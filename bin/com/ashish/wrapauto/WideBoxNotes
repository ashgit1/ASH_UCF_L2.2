What is Boxing and Unboxing?
Conversion of a primitive type to the corresponding reference(wrapper) type is called boxing, such as an int to a java.lang.Integer. 
Conversion of the reference type to the corresponding primitive type is called unboxing, such as Byte to byte.
Since JDK 1.5, Conversion from primitive types to corresponding wrapper objects and vice versa can happen automatically.

What is Widening?
Widening is transforming a variable in another with a wider type.
Widening can be done with primitive or reference types.
(*)But widening of reference(wrapper) variable depends upon inheritance.

For example :
String -> Object
int -> long

Rules:
------

1. Widening wins over boxing and var-args
2. Boxing wins over var-args
3. Widening of reference variable depends on inheritance(so, Integer cannot be widened to Long. But, Integer widened to Number).
4. Boxing and widening is possible	  
[int -{Boxing}-> Integer, Integer -{Widening}-> Number] = (Possible)
5. Widening and boxing is not possible 
[Integer -{Widening}-> Number -{Boxing}-> ?? , Number can't be Boxed since no Wrapper for it. ] = (Not Possible)
6. var-args can be combined with either boxing or widening.

What is var-args ?
Explained in com.ashish.varargs.
